{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area de trabalho\\\\TI\\\\Projetos\\\\teste-estagio\\\\teste-frontend-estagio-v3\\\\src\\\\components\\\\EquipmentStatus\\\\EquipmentStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\nimport { Container, Button, ListGroup, Card, Col, Row, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EquipmentStatus(props) {\n  _s();\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\n  const state = {};\n  equipmentStateHistory.forEach(equipment => {\n    equipment.equipmentId = state;\n    let popupClass = '';\n    if (state.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\n      popupClass = \"operando\";\n    } else if (state.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\n      popupClass = \"parado\";\n    } else if (state.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\n      popupClass = \"manutenção\";\n    }\n  });\n  const markerPopups = Object.keys(lastStates).map(equipmentId => {\n    const stateText = states[equipmentId];\n    let popupClass = '';\n    if (stateText === 'Operando') {\n      popupClass = 'operando';\n    } else if (stateText === 'Manutenção') {\n      popupClass = 'manutencao';\n    } else if (stateText === 'Parado') {\n      popupClass = 'parado';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Equipamento ID: \", equipmentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: popupClass,\n        children: [\"Estado: \", stateText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showStatusHistory(equipmentId),\n        children: \"Ver hist\\xF3rico de estados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, equipmentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    if (props.selectedEquipmentId === null) {\n      setSelectedEquipmentHistory([]);\n      return;\n    }\n    const filteredEquipment = equipmentStateHistory.filter(equipment => equipment.equipmentId === props.selectedEquipmentId);\n    if (filteredEquipment.length > 0) {\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\n    } else {\n      setSelectedEquipmentHistory([]);\n    }\n  }, [props.selectedEquipmentId]);\n\n  // função para exibir o histórico de estados dos equipamentos\n  function showEquipmentHistory() {\n    if (selectedEquipmentHistory.length > 0) {\n      return selectedEquipmentHistory.map(state => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-3 me-3\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Data: \", state.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: popupClass,\n                  children: [\"Estado: \", state.equipmentStateId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, state.equipmentStateId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Selecione um equipamento para ver seu hist\\xF3rico de estados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.selectedEquipmentId !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hist\\xF3rico de estados dos equipamentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"danger\",\n        onClick: () => props.showStatusHistory(null),\n        children: [\"Fechar \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 108\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), showEquipmentHistory()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n_s(EquipmentStatus, \"8HqEd1hvzcwNuWdS33DBjbtDdjQ=\");\n_c = EquipmentStatus;\nexport default EquipmentStatus;\nvar _c;\n$RefreshReg$(_c, \"EquipmentStatus\");","map":{"version":3,"names":["React","useState","useEffect","equipmentStateHistory","Container","Button","ListGroup","Card","Col","Row","CardDeck","jsxDEV","_jsxDEV","Fragment","_Fragment","EquipmentStatus","props","_s","selectedEquipmentHistory","setSelectedEquipmentHistory","state","forEach","equipment","equipmentId","popupClass","equipmentStateId","markerPopups","Object","keys","lastStates","map","stateText","states","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","showStatusHistory","selectedEquipmentId","filteredEquipment","filter","length","showEquipmentHistory","Body","Title","date","Text","variant","class","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/components/EquipmentStatus/EquipmentStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\r\nimport { Container, Button, ListGroup, Card, Col, Row, CardDeck } from 'react-bootstrap';\r\n\r\nfunction EquipmentStatus(props) {\r\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\r\n  const state = {}\r\n\r\n  equipmentStateHistory.forEach(equipment => {\r\n\r\n    equipment.equipmentId = state\r\n\r\n    let popupClass = '';\r\n    if (state.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\r\n        popupClass = \"operando\"\r\n    } else if (state.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\r\n        popupClass = \"parado\"\r\n    } else if (state.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\r\n        popupClass = \"manutenção\"\r\n    }\r\n\r\n  });\r\n\r\n  const markerPopups = Object.keys(lastStates).map((equipmentId) => {\r\n    const stateText = states[equipmentId];\r\n    let popupClass = '';\r\n    if (stateText === 'Operando') {\r\n        popupClass = 'operando';\r\n    } else if (stateText === 'Manutenção') {\r\n        popupClass = 'manutencao';\r\n    } else if (stateText === 'Parado') {\r\n        popupClass = 'parado';\r\n    }\r\n\r\n    return (\r\n      <div key={equipmentId}>\r\n        <p>Equipamento ID: {equipmentId}</p>\r\n        <p className={popupClass}>Estado: {stateText}</p>\r\n        <Button onClick={() => showStatusHistory(equipmentId)}>Ver histórico de estados</Button>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.selectedEquipmentId === null) {\r\n        setSelectedEquipmentHistory([]);\r\n        return;\r\n    }\r\n\r\n    const filteredEquipment = equipmentStateHistory.filter(\r\n      (equipment) => equipment.equipmentId === props.selectedEquipmentId\r\n    );\r\n\r\n    if (filteredEquipment.length > 0) {\r\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\r\n    } else {\r\n      setSelectedEquipmentHistory([]);\r\n    }\r\n  }, [props.selectedEquipmentId]);\r\n\r\n  // função para exibir o histórico de estados dos equipamentos\r\n  function showEquipmentHistory() {\r\n    if (selectedEquipmentHistory.length > 0) {\r\n      return selectedEquipmentHistory.map((state) => {\r\n        return (\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"mb-3 me-3\" key={state.equipmentStateId}>\r\n                <Card.Body>\r\n                <Card.Title>Data: {state.date}</Card.Title><Card.Text className={popupClass}>Estado: {state.equipmentStateId}</Card.Text> \r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      });\r\n    } else {\r\n      return <h2 className=\"text-center\">Selecione um equipamento para ver seu histórico de estados.</h2>;\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        \r\n        {props.selectedEquipmentId !== null && (\r\n          <>\r\n            <h1>Histórico de estados dos equipamentos</h1>\r\n            <Button className=\"mb-3\" variant=\"danger\" onClick={() => props.showStatusHistory(null)}>Fechar <i class=\"fas fa-times\"></i> </Button>\r\n          </>\r\n        )}\r\n        {showEquipmentHistory()}\r\n        \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default EquipmentStatus;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}