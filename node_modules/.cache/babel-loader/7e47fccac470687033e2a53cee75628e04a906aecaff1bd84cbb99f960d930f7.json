{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area de trabalho\\\\TI\\\\Projetos\\\\teste-estagio\\\\teste-frontend-estagio-v3\\\\src\\\\pages\\\\Map\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Layout from '../../components/Layout';\nimport equipmentPositionHistory from '../../data/equipmentPositionHistory.json';\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\nimport EquipmentStatus from '../../components/EquipmentStatus/EquipmentStatus';\nimport equipmentsData from '../../data/equipment.json';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport { Container, Button } from 'react-bootstrap';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [selectedEquipmentId, setSelectedEquipmentId] = useState(null);\n  const lastPositions = {};\n  const lastStates = {};\n  const states = {};\n  const mapRef = useRef(null);\n  const handleZoomIn = () => {\n    const map = mapRef.current;\n    map.zoomIn();\n  };\n  const handleZoomOut = () => {\n    const map = mapRef.current;\n    map.zoomOut();\n  };\n\n  // Criando um objeto de controle de legenda\n  const legend = L.control.legend({\n    position: 'bottomright'\n  });\n\n  // Adicionando o objeto de controle de legenda ao mapa\n  useEffect(() => {\n    legend.addTo(map);\n  }, []);\n\n  // Definindo o conteúdo da legenda\n  legend.onAdd = function () {\n    const div = L.DomUtil.create('div', 'info legend');\n    div.innerHTML += '<i style=\"background:' + '#ff0000' + '\"></i>' + 'Caminhão de carga' + '<br>';\n    div.innerHTML += '<i style=\"background:' + '#00ff00' + '\"></i>' + 'Harvester' + '<br>';\n    div.innerHTML += '<i style=\"background:' + '#0000ff' + '\"></i>' + 'Garra traçadeira' + '<br>';\n    return div;\n  };\n\n  //Pesquisa dentro do Json onde se localiza o equipamento com a data mais recente de sua localização e retorna sua localização\n  equipmentPositionHistory.forEach(equipment => {\n    const lastPosition = equipment.positions.reduce((prev, current) => {\n      return new Date(prev.date) > new Date(current.date) ? prev : current;\n    });\n    lastPositions[equipment.equipmentId] = lastPosition;\n  });\n\n  //Pesquisa dentro do Json qual o estado atual de cada equipamente\n  equipmentStateHistory.forEach(equipment => {\n    const lastState = equipment.states.reduce((prev, current) => {\n      return new Date(prev.date) > new Date(current.date) ? prev : current;\n    });\n    lastStates[equipment.equipmentId] = lastState;\n    let stateText = '';\n    if (lastState.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\n      stateText = \"Operando\";\n    } else if (lastState.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\n      stateText = \"Parado\";\n    } else if (lastState.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\n      stateText = \"Manutenção\";\n    }\n    states[equipment.equipmentId] = stateText;\n  });\n\n  //renderiza o estado dos equipamentos para mostrar em cada marker\n  const markerPopups = Object.keys(lastStates).map(equipmentId => {\n    const stateText = states[equipmentId];\n    let popupClass = '';\n    if (stateText === 'Operando') {\n      popupClass = 'operando';\n    } else if (stateText === 'Manutenção') {\n      popupClass = 'manutencao';\n    } else if (stateText === 'Parado') {\n      popupClass = 'parado';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Equipamento ID: \", equipmentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: popupClass,\n        children: [\"Estado: \", stateText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-2\",\n        onClick: () => showStatusHistory(equipmentId),\n        children: \"Ver hist\\xF3rico de estados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, equipmentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  });\n\n  //Renderiza os markers no mapa e os coloca na última posição do equipamento\n  const markers = Object.values(lastPositions).map((position, index) => {\n    let equipmentName = [];\n    //Define qual é o equipamento de acordo com seu ID\n    equipmentsData.map((equipment, index) => {\n      if (equipment.equipmentModelId === 'a3540227-2f0e-4362-9517-92f41dabbfdf') {\n        equipmentName[index] = 'Caminhão de carga';\n      } else if (equipment.equipmentModelId === 'a4b0c114-acd8-4151-9449-7d12ab9bf40f') {\n        equipmentName[index] = 'Harvester';\n      } else if (equipment.equipmentModelId === '9c3d009e-0d42-4a6e-9036-193e9bca3199') {\n        equipmentName[index] = 'Garra traçadeira';\n      }\n    });\n\n    // Definir o ícone do marcador com base no nome do equipamento\n    let customIcon;\n    if (equipmentName[index] === 'Caminhão de carga') {\n      customIcon = new Icon({\n        iconUrl: '/marker-red.png',\n        iconSize: [15, 25]\n      });\n    } else if (equipmentName[index] === 'Harvester') {\n      customIcon = new Icon({\n        iconUrl: '/marker-green.png',\n        iconSize: [15, 25]\n      });\n    } else if (equipmentName[index] === 'Garra traçadeira') {\n      customIcon = new Icon({\n        iconUrl: '/marker-blue.png',\n        iconSize: [15, 25]\n      });\n    }\n\n    //retorno em que mostram os <Marker>\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [position.lat, position.lon],\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: equipmentName[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Localiza\\xE7\\xE3o:\", `Lat: ${position.lat}, Lon: ${position.lon}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), markerPopups[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, `${position.lat}-${position.lon}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  });\n  function showStatusHistory(equipmentId) {\n    setSelectedEquipmentId(null);\n    setSelectedEquipmentId(equipmentId);\n  }\n  const initialPosition = markers.length ? markers[0].props.position : [-23.55, -46.64];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"map-component\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map\",\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: initialPosition,\n            zoom: 10,\n            scrollWheelZoom: true,\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this), markers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EquipmentStatus, {\n        showStatusHistory: showStatusHistory,\n        selectedEquipmentId: selectedEquipmentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"s0LiWFP128ev9qgtCDUVvDI8wys=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Layout","equipmentPositionHistory","equipmentStateHistory","EquipmentStatus","equipmentsData","MapContainer","TileLayer","Marker","Popup","Icon","Container","Button","L","jsxDEV","_jsxDEV","Map","_s","selectedEquipmentId","setSelectedEquipmentId","lastPositions","lastStates","states","mapRef","handleZoomIn","map","current","zoomIn","handleZoomOut","zoomOut","legend","control","position","addTo","onAdd","div","DomUtil","create","innerHTML","forEach","equipment","lastPosition","positions","reduce","prev","Date","date","equipmentId","lastState","stateText","equipmentStateId","markerPopups","Object","keys","popupClass","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","showStatusHistory","markers","values","index","equipmentName","equipmentModelId","customIcon","iconUrl","iconSize","lat","lon","icon","initialPosition","length","props","center","zoom","scrollWheelZoom","attribution","url","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/pages/Map/Map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport equipmentPositionHistory from '../../data/equipmentPositionHistory.json';\r\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\r\nimport EquipmentStatus from '../../components/EquipmentStatus/EquipmentStatus';\r\nimport equipmentsData from '../../data/equipment.json';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { Icon } from 'leaflet';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport L from 'leaflet'\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction Map() {\r\n\r\n    const [selectedEquipmentId, setSelectedEquipmentId] = useState(null);\r\n\r\n    const lastPositions = {};\r\n    const lastStates = {};\r\n    const states = {};\r\n\r\n    const mapRef = useRef(null);\r\n\r\n    const handleZoomIn = () => {\r\n        const map = mapRef.current;\r\n        map.zoomIn();\r\n    };\r\n\r\n    const handleZoomOut = () => {\r\n        const map = mapRef.current;\r\n        map.zoomOut();\r\n    };\r\n\r\n    // Criando um objeto de controle de legenda\r\n    const legend = L.control.legend({ position: 'bottomright' });\r\n\r\n    // Adicionando o objeto de controle de legenda ao mapa\r\n    useEffect(() => {\r\n        legend.addTo(map);\r\n    }, []);\r\n\r\n    // Definindo o conteúdo da legenda\r\n    legend.onAdd = function () {\r\n        const div = L.DomUtil.create('div', 'info legend');\r\n        div.innerHTML += '<i style=\"background:' + '#ff0000' + '\"></i>' + 'Caminhão de carga' + '<br>';\r\n        div.innerHTML += '<i style=\"background:' + '#00ff00' + '\"></i>' + 'Harvester' + '<br>';\r\n        div.innerHTML += '<i style=\"background:' + '#0000ff' + '\"></i>' + 'Garra traçadeira' + '<br>';\r\n        return div;\r\n    };\r\n\r\n\r\n    //Pesquisa dentro do Json onde se localiza o equipamento com a data mais recente de sua localização e retorna sua localização\r\n    equipmentPositionHistory.forEach(equipment => {\r\n        const lastPosition = equipment.positions.reduce((prev, current) => {\r\n            return (new Date(prev.date) > new Date(current.date)) ? prev : current;\r\n        });\r\n        lastPositions[equipment.equipmentId] = lastPosition\r\n    });\r\n\r\n    //Pesquisa dentro do Json qual o estado atual de cada equipamente\r\n    equipmentStateHistory.forEach(equipment => {\r\n        const lastState = equipment.states.reduce((prev, current) => {\r\n            return (new Date(prev.date) > new Date(current.date)) ? prev : current;\r\n        });\r\n        lastStates[equipment.equipmentId] = lastState\r\n\r\n        let stateText = '';\r\n        if (lastState.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\r\n            stateText = \"Operando\"\r\n        } else if (lastState.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\r\n            stateText = \"Parado\"\r\n        } else if (lastState.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\r\n            stateText = \"Manutenção\"\r\n        }\r\n\r\n        states[equipment.equipmentId] = stateText;\r\n\r\n    });\r\n\r\n    //renderiza o estado dos equipamentos para mostrar em cada marker\r\n    const markerPopups = Object.keys(lastStates).map((equipmentId) => {\r\n        const stateText = states[equipmentId];\r\n        let popupClass = '';\r\n        if (stateText === 'Operando') {\r\n            popupClass = 'operando';\r\n        } else if (stateText === 'Manutenção') {\r\n            popupClass = 'manutencao';\r\n        } else if (stateText === 'Parado') {\r\n            popupClass = 'parado';\r\n        }\r\n\r\n        return (\r\n          <div key={equipmentId}>\r\n            <li>Equipamento ID: {equipmentId}</li>\r\n            <li className={popupClass}>Estado: {stateText}</li>\r\n            <Button className=\"mt-2\" onClick={() => showStatusHistory(equipmentId)}>Ver histórico de estados</Button>\r\n          </div>\r\n        );\r\n      });\r\n\r\n    //Renderiza os markers no mapa e os coloca na última posição do equipamento\r\n    const markers = Object.values(lastPositions).map((position, index) => {\r\n\r\n        let equipmentName = [];\r\n        //Define qual é o equipamento de acordo com seu ID\r\n        equipmentsData.map((equipment, index) => {\r\n            if (equipment.equipmentModelId === 'a3540227-2f0e-4362-9517-92f41dabbfdf') {\r\n            equipmentName[index] = 'Caminhão de carga'\r\n            } else if (equipment.equipmentModelId === 'a4b0c114-acd8-4151-9449-7d12ab9bf40f') {\r\n            equipmentName[index] = 'Harvester'\r\n            } else if (equipment.equipmentModelId === '9c3d009e-0d42-4a6e-9036-193e9bca3199') {\r\n            equipmentName[index] = 'Garra traçadeira'\r\n            }\r\n        })\r\n\r\n        // Definir o ícone do marcador com base no nome do equipamento\r\n        let customIcon;\r\n        if (equipmentName[index] === 'Caminhão de carga') {\r\n            customIcon = new Icon({\r\n                iconUrl: '/marker-red.png',\r\n                iconSize: [15, 25]\r\n            });\r\n        } else if (equipmentName[index] === 'Harvester') {\r\n            customIcon = new Icon({\r\n                iconUrl: '/marker-green.png',\r\n                iconSize: [15, 25]\r\n            });\r\n        } else if (equipmentName[index] === 'Garra traçadeira') {\r\n            customIcon = new Icon({\r\n                iconUrl: '/marker-blue.png',\r\n                iconSize: [15, 25]\r\n            });\r\n        }\r\n        \r\n\r\n        //retorno em que mostram os <Marker>\r\n        return (\r\n\r\n            <Marker key={`${position.lat}-${position.lon}`} position={[position.lat, position.lon]} icon={customIcon}>\r\n                <Popup>\r\n                    <ul>\r\n                        <h4>{equipmentName[index]}</h4>\r\n                        <li>Localização:{`Lat: ${position.lat}, Lon: ${position.lon}`}</li>\r\n                        {markerPopups[index]}\r\n                    </ul>\r\n                </Popup>\r\n            </Marker>\r\n        )\r\n    })\r\n        \r\n\r\n\r\n    function showStatusHistory(equipmentId) {\r\n        setSelectedEquipmentId(null);\r\n        setSelectedEquipmentId(equipmentId);\r\n    }\r\n\r\n    const initialPosition = markers.length ? markers[0].props.position : [-23.55, -46.64];\r\n        \r\n    return(\r\n    <Container >\r\n        <Layout>\r\n            <section className='map-component'>\r\n                <div className='map'>\r\n                <MapContainer center={initialPosition} zoom={10} scrollWheelZoom={true}>\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    /> \r\n                    {markers}\r\n                </MapContainer>\r\n                </div>\r\n            </section>\r\n            \r\n            <EquipmentStatus showStatusHistory={showStatusHistory} selectedEquipmentId={selectedEquipmentId} />\r\n        </Layout>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}