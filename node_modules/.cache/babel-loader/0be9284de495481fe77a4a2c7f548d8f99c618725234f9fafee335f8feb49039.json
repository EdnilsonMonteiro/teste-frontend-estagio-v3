{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area de trabalho\\\\TI\\\\Projetos\\\\teste-estagio\\\\teste-frontend-estagio-v3\\\\src\\\\components\\\\EquipmentStatus\\\\EquipmentStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport equipmentStateHistory2 from '../../data/equipmentStateHistory.json';\nimport { Container, Button, ListGroup, Card, Col, Row, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EquipmentStatus(props) {\n  _s();\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\n  useEffect(() => {\n    if (props.selectedEquipmentId === null) {\n      setSelectedEquipmentHistory([]);\n      return;\n    }\n    const filteredEquipment = equipmentStateHistory.filter(equipment => equipment.equipmentId === props.selectedEquipmentId);\n    if (filteredEquipment.length > 0) {\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\n    } else {\n      setSelectedEquipmentHistory([]);\n    }\n  }, [props.selectedEquipmentId]);\n\n  // função para exibir o histórico de estados dos equipamentos\n  function showEquipmentHistory() {\n    if (selectedEquipmentHistory.length > 0) {\n      return selectedEquipmentHistory.map(state => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-3 me-3\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Data: \", state.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: popupClass,\n                  children: [\"Estado: \", state.equipmentStateId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, state.equipmentStateId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Selecione um equipamento para ver seu hist\\xF3rico de estados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.selectedEquipmentId !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hist\\xF3rico de estados dos equipamentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"danger\",\n        onClick: () => props.showStatusHistory(null),\n        children: [\"Fechar \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 108\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), showEquipmentHistory()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(EquipmentStatus, \"8HqEd1hvzcwNuWdS33DBjbtDdjQ=\");\n_c = EquipmentStatus;\nexport default EquipmentStatus;\nvar _c;\n$RefreshReg$(_c, \"EquipmentStatus\");","map":{"version":3,"names":["React","useState","useEffect","equipmentStateHistory2","Container","Button","ListGroup","Card","Col","Row","CardDeck","jsxDEV","_jsxDEV","Fragment","_Fragment","EquipmentStatus","props","_s","selectedEquipmentHistory","setSelectedEquipmentHistory","selectedEquipmentId","filteredEquipment","equipmentStateHistory","filter","equipment","equipmentId","length","states","showEquipmentHistory","map","state","children","className","Body","Title","date","fileName","_jsxFileName","lineNumber","columnNumber","Text","popupClass","equipmentStateId","variant","onClick","showStatusHistory","class","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/components/EquipmentStatus/EquipmentStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport equipmentStateHistory2 from '../../data/equipmentStateHistory.json';\r\nimport { Container, Button, ListGroup, Card, Col, Row, CardDeck } from 'react-bootstrap';\r\n\r\nfunction EquipmentStatus(props) {\r\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.selectedEquipmentId === null) {\r\n        setSelectedEquipmentHistory([]);\r\n        return;\r\n    }\r\n\r\n    const filteredEquipment = equipmentStateHistory.filter(\r\n      (equipment) => equipment.equipmentId === props.selectedEquipmentId\r\n    );\r\n\r\n    if (filteredEquipment.length > 0) {\r\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\r\n    } else {\r\n      setSelectedEquipmentHistory([]);\r\n    }\r\n  }, [props.selectedEquipmentId]);\r\n\r\n  // função para exibir o histórico de estados dos equipamentos\r\n  function showEquipmentHistory() {\r\n    if (selectedEquipmentHistory.length > 0) {\r\n      return selectedEquipmentHistory.map((state) => {\r\n        return (\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"mb-3 me-3\" key={state.equipmentStateId}>\r\n                <Card.Body>\r\n                <Card.Title>Data: {state.date}</Card.Title><Card.Text className={popupClass}>Estado: {state.equipmentStateId}</Card.Text> \r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      });\r\n    } else {\r\n      return <h2 className=\"text-center\">Selecione um equipamento para ver seu histórico de estados.</h2>;\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        \r\n        {props.selectedEquipmentId !== null && (\r\n          <>\r\n            <h1>Histórico de estados dos equipamentos</h1>\r\n            <Button className=\"mb-3\" variant=\"danger\" onClick={() => props.showStatusHistory(null)}>Fechar <i class=\"fas fa-times\"></i> </Button>\r\n          </>\r\n        )}\r\n        {showEquipmentHistory()}\r\n        \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default EquipmentStatus;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}