{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L from 'leaflet';\nfunction MapLegend(_ref) {\n  _s();\n  let {\n    position\n  } = _ref;\n  const map = useMap();\n  useEffect(() => {\n    const legend = L.control({\n      position: position\n    });\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = ['Azul', 'Verde', 'Vermelho'];\n      let labels = [];\n      let from;\n      let to;\n      const blueStyle = \"background-color: blue; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\n      const greenStyle = \"background-color: #0bfc5a; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\n      const redStyle = \"background-color: red; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\n      for (let i = 0; i < grades.length; i++) {\n        let colorStyle;\n        if (grades[i] === 'Azul') {\n          colorStyle = blueStyle;\n        } else if (grades[i] === 'Verde') {\n          colorStyle = greenStyle;\n        } else if (grades[i] === 'Vermelho') {\n          colorStyle = redStyle;\n        }\n        labels.push('<span style=\"' + colorStyle + '\"></span>' + grades[i]);\n      }\n      div.style.color = \"black\";\n      div.innerHTML = \"<h4>Equipamento</h4>\" + \"<p>\" + labels[0] + \": Garra traçadeira</p>\" + \"<p>\" + labels[1] + \": Harverster</p>\" + \"<p>\" + labels[2] + \": Caminhão de carga</p>\";\n      return div;\n    };\n    legend.addTo(map);\n    return () => {\n      map.removeControl(legend);\n    };\n  }, [position, map]);\n  return null;\n}\n_s(MapLegend, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapLegend;\nexport default MapLegend;\nvar _c;\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"names":["useEffect","useMap","L","MapLegend","_ref","_s","position","map","legend","control","onAdd","div","DomUtil","create","grades","labels","from","to","blueStyle","greenStyle","redStyle","i","length","colorStyle","push","style","color","innerHTML","addTo","removeControl","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/components/MapLegend.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport L from 'leaflet'\r\n\r\nfunction MapLegend({ position }) {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    const legend = L.control({ position: position });\r\n\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create(\"div\", \"info legend\");\r\n      const grades = ['Azul', 'Verde', 'Vermelho'];\r\n      let labels = []\r\n      let from;\r\n      let to;\r\n\r\n      const blueStyle = \"background-color: blue; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\r\n      const greenStyle = \"background-color: #0bfc5a; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\r\n      const redStyle = \"background-color: red; display: inline-block; height: 1em; width: 1em; margin-right: 0.5em;\";\r\n\r\n      for (let i = 0; i < grades.length; i++) {\r\n        let colorStyle;\r\n        if (grades[i] === 'Azul') {\r\n          colorStyle = blueStyle;\r\n        } else if (grades[i] === 'Verde') {\r\n          colorStyle = greenStyle;\r\n        } else if (grades[i] === 'Vermelho') {\r\n          colorStyle = redStyle;\r\n        }\r\n        labels.push(\r\n          '<span style=\"' + colorStyle + '\"></span>' +\r\n          grades[i]\r\n        );\r\n      }\r\n      div.style.color = \"black\"\r\n      div.innerHTML =\r\n        \"<h4>Equipamento</h4>\" +\r\n        \"<p>\" + labels[0] + \": Garra traçadeira</p>\" +\r\n        \"<p>\" + labels[1] + \": Harverster</p>\" +\r\n        \"<p>\" + labels[2] + \": Caminhão de carga</p>\" ;\r\n      return div;\r\n    };\r\n\r\n    legend.addTo(map);\r\n\r\n    return () => {\r\n      map.removeControl(legend);\r\n    };\r\n  }, [position, map]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default MapLegend;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,SAAS;AAEvB,SAASC,SAASA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7B,MAAMG,GAAG,GAAGN,MAAM,EAAE;EAEpBD,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGN,CAAC,CAACO,OAAO,CAAC;MAAEH,QAAQ,EAAEA;IAAS,CAAC,CAAC;IAEhDE,MAAM,CAACE,KAAK,GAAG,MAAM;MACnB,MAAMC,GAAG,GAAGT,CAAC,CAACU,OAAO,CAACC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC;MAClD,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;MAC5C,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,IAAI;MACR,IAAIC,EAAE;MAEN,MAAMC,SAAS,GAAG,8FAA8F;MAChH,MAAMC,UAAU,GAAG,iGAAiG;MACpH,MAAMC,QAAQ,GAAG,6FAA6F;MAE9G,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIE,UAAU;QACd,IAAIT,MAAM,CAACO,CAAC,CAAC,KAAK,MAAM,EAAE;UACxBE,UAAU,GAAGL,SAAS;QACxB,CAAC,MAAM,IAAIJ,MAAM,CAACO,CAAC,CAAC,KAAK,OAAO,EAAE;UAChCE,UAAU,GAAGJ,UAAU;QACzB,CAAC,MAAM,IAAIL,MAAM,CAACO,CAAC,CAAC,KAAK,UAAU,EAAE;UACnCE,UAAU,GAAGH,QAAQ;QACvB;QACAL,MAAM,CAACS,IAAI,CACT,eAAe,GAAGD,UAAU,GAAG,WAAW,GAC1CT,MAAM,CAACO,CAAC,CAAC,CACV;MACH;MACAV,GAAG,CAACc,KAAK,CAACC,KAAK,GAAG,OAAO;MACzBf,GAAG,CAACgB,SAAS,GACX,sBAAsB,GACtB,KAAK,GAAGZ,MAAM,CAAC,CAAC,CAAC,GAAG,wBAAwB,GAC5C,KAAK,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,kBAAkB,GACtC,KAAK,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,yBAAyB;MAC/C,OAAOJ,GAAG;IACZ,CAAC;IAEDH,MAAM,CAACoB,KAAK,CAACrB,GAAG,CAAC;IAEjB,OAAO,MAAM;MACXA,GAAG,CAACsB,aAAa,CAACrB,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACF,QAAQ,EAAEC,GAAG,CAAC,CAAC;EAEnB,OAAO,IAAI;AACb;AAACF,EAAA,CAhDQF,SAAS;EAAA,QACJF,MAAM;AAAA;AAAA6B,EAAA,GADX3B,SAAS;AAkDlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}