{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area de trabalho\\\\TI\\\\Projetos\\\\teste-estagio\\\\teste-frontend-estagio-v3\\\\src\\\\pages\\\\Map\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport equipmentPositionHistory from '../../data/equipmentPositionHistory.json';\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport { Container } from 'react-bootstrap';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [markersRef, setMarkersRef] = useState({});\n  const [positionHistory, setPositionHistory] = useState({});\n  const lastPositions = {};\n  const lastStates = {};\n  const states = {};\n  const teste = [51.505, -0.09];\n  const customIcon = new Icon({\n    iconUrl: '/marker.png',\n    iconSize: [15, 25]\n  });\n\n  //Pesquisa dentro do Json onde se localiza o equipamento com a data mais recente de sua localização e retorna sua localização\n  equipmentPositionHistory.forEach(equipment => {\n    const lastPosition = equipment.positions.reduce((prev, current) => {\n      return new Date(prev.date) > new Date(current.date) ? prev : current;\n    });\n    lastPositions[equipment.equipmentId] = lastPosition;\n  });\n\n  //Pesquisa dentro do Json qual o estado atual de cada equipamente\n  equipmentStateHistory.forEach(equipment => {\n    const lastState = equipment.states.reduce((prev, current) => {\n      return new Date(prev.date) > new Date(current.date) ? prev : current;\n    });\n    lastStates[equipment.equipmentId] = lastState;\n    let stateText = '';\n    if (lastState.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\n      stateText = \"Operando\";\n    } else if (lastState.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\n      stateText = \"Parado\";\n    } else if (lastState.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\n      stateText = \"Manutenção\";\n    }\n    states[equipment.equipmentId] = stateText;\n  });\n\n  //renderiza o estado dos equipamentos para mostrar em cada marker\n  const markerPopups = Object.keys(lastStates).map(equipmentId => {\n    const stateText = states[equipmentId];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Equipamento ID: \", equipmentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estado: \", stateText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, equipmentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this);\n  });\n\n  //Renderiza os markers no mapa e os coloca na última posição do equipamento\n  const markers = Object.values(lastPositions).map((position, index) => /*#__PURE__*/_jsxDEV(Marker, {\n    position: [position.lat, position.lon],\n    icon: customIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [`Lat: ${position.lat}, Lon: ${position.lon}`, markerPopups[index]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)\n  }, `${position.lat}-${position.lon}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this));\n  const initialPosition = markers.length ? markers[0].props.position : [-23.55, -46.64];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"map-component\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: initialPosition,\n          zoom: 10,\n          scrollWheelZoom: true,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), markers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(lastPositions).map(equipmentId => {\n        const position = lastPositions[equipmentId];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Equipment ID: \", equipmentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last position: \", position.lat, \", \", position.lon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, equipmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"GJDGM49C7BDGDyjArpgzsq1F6pQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","equipmentPositionHistory","equipmentStateHistory","MapContainer","TileLayer","useMap","Marker","Popup","Icon","Container","jsxDEV","_jsxDEV","Map","_s","markersRef","setMarkersRef","positionHistory","setPositionHistory","lastPositions","lastStates","states","teste","customIcon","iconUrl","iconSize","forEach","equipment","lastPosition","positions","reduce","prev","current","Date","date","equipmentId","lastState","stateText","equipmentStateId","markerPopups","Object","keys","map","children","fileName","_jsxFileName","lineNumber","columnNumber","markers","values","position","index","lat","lon","icon","initialPosition","length","props","className","center","zoom","scrollWheelZoom","attribution","url","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/pages/Map/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport equipmentPositionHistory from '../../data/equipmentPositionHistory.json';\r\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\r\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\r\nimport { Icon } from 'leaflet';\r\nimport { Container } from 'react-bootstrap';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction Map() {\r\n    const [markersRef, setMarkersRef] = useState({});\r\n    const [positionHistory, setPositionHistory] = useState({});\r\n\r\n    const lastPositions = {};\r\n    const lastStates = {};\r\n    const states = {};\r\n\r\n    const teste = [51.505, -0.09]\r\n\r\n    const customIcon = new Icon({\r\n        iconUrl: '/marker.png',\r\n        iconSize: [15, 25]\r\n    })\r\n\r\n    //Pesquisa dentro do Json onde se localiza o equipamento com a data mais recente de sua localização e retorna sua localização\r\n    equipmentPositionHistory.forEach(equipment => {\r\n        const lastPosition = equipment.positions.reduce((prev, current) => {\r\n            return (new Date(prev.date) > new Date(current.date)) ? prev : current;\r\n        });\r\n        lastPositions[equipment.equipmentId] = lastPosition\r\n    });\r\n\r\n    //Pesquisa dentro do Json qual o estado atual de cada equipamente\r\n    equipmentStateHistory.forEach(equipment => {\r\n        const lastState = equipment.states.reduce((prev, current) => {\r\n            return (new Date(prev.date) > new Date(current.date)) ? prev : current;\r\n        });\r\n        lastStates[equipment.equipmentId] = lastState\r\n\r\n        let stateText = '';\r\n        if (lastState.equipmentStateId === \"0808344c-454b-4c36-89e8-d7687e692d57\") {\r\n            stateText = \"Operando\"\r\n        } else if (lastState.equipmentStateId === \"baff9783-84e8-4e01-874b-6fd743b875ad\") {\r\n            stateText = \"Parado\"\r\n        } else if (lastState.equipmentStateId === \"03b2d446-e3ba-4c82-8dc2-a5611fea6e1f\") {\r\n            stateText = \"Manutenção\"\r\n        }\r\n\r\n        states[equipment.equipmentId] = stateText;\r\n\r\n    });\r\n\r\n    //renderiza o estado dos equipamentos para mostrar em cada marker\r\n    const markerPopups = Object.keys(lastStates).map((equipmentId) => {\r\n        const stateText = states[equipmentId];\r\n        return (\r\n          <div key={equipmentId}>\r\n            <h5>Equipamento ID: {equipmentId}</h5>\r\n            <p>Estado: {stateText}</p>\r\n          </div>\r\n        );\r\n      });\r\n\r\n    //Renderiza os markers no mapa e os coloca na última posição do equipamento\r\n    const markers = Object.values(lastPositions).map((position, index) => (\r\n        <Marker key={`${position.lat}-${position.lon}`} position={[position.lat, position.lon]} icon={customIcon}>\r\n          <Popup>\r\n            {`Lat: ${position.lat}, Lon: ${position.lon}`}\r\n            {markerPopups[index]}\r\n          </Popup>\r\n        </Marker>\r\n    ));\r\n\r\n    \r\n\r\n    const initialPosition = markers.length ? markers[0].props.position : [-23.55, -46.64];\r\n        \r\n    return(\r\n    <Container>\r\n    <section className='map-component'>\r\n        <div className='map'>\r\n        <MapContainer center={initialPosition} zoom={10} scrollWheelZoom={true}>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            /> \r\n            {markers}\r\n        </MapContainer>\r\n        </div>\r\n    </section>\r\n    <div>\r\n    {Object.keys(lastPositions).map(equipmentId => {\r\n      const position = lastPositions[equipmentId];\r\n      return (\r\n        <div key={equipmentId}>\r\n          <p>Equipment ID: {equipmentId}</p>\r\n          <p>Last position: {position.lat}, {position.lon}</p>\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}