{"ast":null,"code":"var _jsxFileName = \"D:\\\\Area de trabalho\\\\TI\\\\Projetos\\\\teste-estagio\\\\teste-frontend-estagio-v3\\\\src\\\\components\\\\EquipmentStatus\\\\EquipmentStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EquipmentStatus(props) {\n  _s();\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\n  useEffect(() => {\n    if (props.selectedEquipmentId === null) {\n      setSelectedEquipmentHistory([]);\n      return;\n    }\n    const filteredEquipment = equipmentStateHistory.filter(equipment => equipment.equipmentId === props.selectedEquipmentId);\n    if (filteredEquipment.length > 0) {\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\n    } else {\n      setSelectedEquipmentHistory([]);\n    }\n  }, [props.selectedEquipmentId]);\n  let sumIndex = 0;\n  let sumHours = 0;\n  selectedEquipmentHistory.forEach((state, index) => {\n    if (state.equipmentStateId === '0808344c-454b-4c36-89e8-d7687e692d57') {\n      // O equipamento está funcionando, portanto precisamos verificar se há um estado anterior para calcular a duração\n      if (index > 0 && selectedEquipmentHistory[index - 1].equipmentStateId !== '0808344c-454b-4c36-89e8-d7687e692d57') {\n        const startDate = new Date(selectedEquipmentHistory[index - 1].date);\n        const endDate = new Date(state.date);\n        const durationMs = endDate.getTime() - startDate.getTime();\n        const durationHours = durationMs / 1000 / 60 / 60; // Convertendo para horas\n        sumHours += durationHours;\n      }\n    }\n    sumIndex += index;\n  });\n  const produtivity = sumHours * 100 / (sumIndex * 24);\n  console.log(produtivity);\n\n  // função para exibir o histórico de estados dos equipamentos\n  function showEquipmentHistory() {\n    if (selectedEquipmentHistory.length > 0) {\n      return selectedEquipmentHistory.map(state => {\n        let popupClass = '';\n        if (state.equipmentStateId === '0808344c-454b-4c36-89e8-d7687e692d57') {\n          popupClass = 'operando';\n        } else if (state.equipmentStateId === 'baff9783-84e8-4e01-874b-6fd743b875ad') {\n          popupClass = 'parado';\n        } else if (state.equipmentStateId === '03b2d446-e3ba-4c82-8dc2-a5611fea6e1f') {\n          popupClass = 'manutencao';\n        }\n        const date = new Date(state.date);\n        const dateOptions = {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: 'numeric'\n        };\n        const formatedDate = date.toLocaleString('pt-BR', dateOptions);\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"1\",\n          md: \"6\",\n          lg: \"3\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: popupClass,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Data: \", formatedDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"\",\n                children: [\"Estado:\", popupClass]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Selecione um equipamento para ver seu hist\\xF3rico de estados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.selectedEquipmentId !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hist\\xF3rico de estados dos equipamentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3 text-center\",\n        style: {\n          width: '300px'\n        },\n        variant: \"danger\",\n        onClick: () => props.showStatusHistory(null),\n        children: [\"Fechar \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 145\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Row, {\n      children: showEquipmentHistory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n_s(EquipmentStatus, \"8HqEd1hvzcwNuWdS33DBjbtDdjQ=\");\n_c = EquipmentStatus;\nexport default EquipmentStatus;\nvar _c;\n$RefreshReg$(_c, \"EquipmentStatus\");","map":{"version":3,"names":["React","useState","useEffect","equipmentStateHistory","Button","Card","Col","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","EquipmentStatus","props","_s","selectedEquipmentHistory","setSelectedEquipmentHistory","selectedEquipmentId","filteredEquipment","filter","equipment","equipmentId","length","states","sumIndex","sumHours","forEach","state","index","equipmentStateId","startDate","Date","date","endDate","durationMs","getTime","durationHours","produtivity","console","log","showEquipmentHistory","map","popupClass","dateOptions","year","month","day","hour","minute","second","formatedDate","toLocaleString","sm","md","lg","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","style","width","variant","onClick","showStatusHistory","class","_c","$RefreshReg$"],"sources":["D:/Area de trabalho/TI/Projetos/teste-estagio/teste-frontend-estagio-v3/src/components/EquipmentStatus/EquipmentStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport equipmentStateHistory from '../../data/equipmentStateHistory.json';\r\nimport { Button, Card, Col, Row} from 'react-bootstrap';\r\n\r\nfunction EquipmentStatus(props) {\r\n  const [selectedEquipmentHistory, setSelectedEquipmentHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.selectedEquipmentId === null) {\r\n        setSelectedEquipmentHistory([]);\r\n        return;\r\n    }\r\n\r\n    const filteredEquipment = equipmentStateHistory.filter(\r\n      (equipment) => equipment.equipmentId === props.selectedEquipmentId\r\n    );\r\n\r\n    if (filteredEquipment.length > 0) {\r\n      setSelectedEquipmentHistory(filteredEquipment[0].states);\r\n    } else {\r\n      setSelectedEquipmentHistory([]);\r\n    }\r\n\r\n  }, [props.selectedEquipmentId]);\r\n\r\n  let sumIndex = 0\r\n  let sumHours = 0;\r\n    selectedEquipmentHistory.forEach((state, index) => {\r\n      if (state.equipmentStateId === '0808344c-454b-4c36-89e8-d7687e692d57') {\r\n        // O equipamento está funcionando, portanto precisamos verificar se há um estado anterior para calcular a duração\r\n        if (index > 0 && selectedEquipmentHistory[index - 1].equipmentStateId !== '0808344c-454b-4c36-89e8-d7687e692d57') {\r\n          const startDate = new Date(selectedEquipmentHistory[index - 1].date);\r\n          const endDate = new Date(state.date);\r\n          const durationMs = endDate.getTime() - startDate.getTime();\r\n          const durationHours = durationMs / 1000 / 60 / 60; // Convertendo para horas\r\n          sumHours += durationHours;\r\n        }\r\n      }\r\n      \r\n      sumIndex += index;\r\n    });\r\n\r\n    const produtivity = sumHours * 100 / (sumIndex * 24)\r\n    console.log(produtivity)\r\n\r\n  // função para exibir o histórico de estados dos equipamentos\r\n  function showEquipmentHistory() {\r\n    if (selectedEquipmentHistory.length > 0) {\r\n      return selectedEquipmentHistory.map((state) => {\r\n        let popupClass = ''\r\n          if(state.equipmentStateId === '0808344c-454b-4c36-89e8-d7687e692d57') {\r\n            popupClass = 'operando'\r\n          } else if (state.equipmentStateId === 'baff9783-84e8-4e01-874b-6fd743b875ad') {\r\n            popupClass = 'parado'\r\n          } else if (state.equipmentStateId === '03b2d446-e3ba-4c82-8dc2-a5611fea6e1f') {\r\n            popupClass = 'manutencao'\r\n          } \r\n\r\n          const date = new Date(state.date)\r\n          const dateOptions = {\r\n            year: 'numeric',\r\n            month: 'short',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n          };\r\n          const formatedDate = date.toLocaleString('pt-BR', dateOptions);\r\n\r\n        return (\r\n            <Col sm=\"1\" md=\"6\" lg=\"3\"  className=\"mb-3\">      \r\n              <Card className={popupClass}>\r\n                <Card.Body>\r\n                  <Card.Title>Data: {formatedDate}</Card.Title>\r\n                  <Card.Text className=\"\">Estado: \r\n                    {popupClass}\r\n                  </Card.Text> \r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n        );\r\n      });\r\n    } else {\r\n      return <h2 className=\"text-center\">Selecione um equipamento para ver seu histórico de estados.</h2>;\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        \r\n        {props.selectedEquipmentId !== null && (\r\n          <>\r\n            <h1>Histórico de estados dos equipamentos</h1>\r\n            <Button className=\"mb-3 text-center\" style={{width: '300px'}} variant=\"danger\" onClick={() => props.showStatusHistory(null)}>Fechar <i class=\"fas fa-times\"></i> </Button>\r\n          </>\r\n        )}\r\n        <Row>{showEquipmentHistory()}</Row>\r\n        \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default EquipmentStatus;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}